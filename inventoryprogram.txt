//inventory.cpp //Structure and array extra credit //July 25, 2013 #include<iostream> #include<iomanip> #include<string> #include<fstream> using namespace std;  //declare a struct called Inventory //struct definition struct Inventory {     //attributes     string itemName;     int itemNumber, itemCount;     float itemPrice;      //constructor:     //a function that initializes data in the object     //same name as struct, no return type     Inventory()     {         //initialize numeric data         itemNumber = 0, itemCount = 0;         itemPrice = 0.0;     }  //function prototypes //return type: void //parameters: 1 array of Inventory, 1 int(size of array) //Purpose: This function reads in the data from "Inventory.txt" //and stores the data in the array void ReadInData(Inventory[], int);  //return type: void //Parameters: 1 array of Inventory, 1 int(size) //purpose: this function creates a formatted report of the data //stored in the array void CreateReport(const Inventory[], int);  //return type: Inventory //parameters: None //Purpose: This function prompts the user for an Inventory item //and returns the item. Inventory GetItem();  //return type: void //Parameters: 1 Inventory //Purpose: This function appends the file "Inventory.txt" //with the single Inventory item that is passed to the function. void AddItemToFile(Inventory);  //return type: float //Parameters: 1 Inventory array, 1 int(size) //Purpose: this function calculates and returns the sum //of all of the item prices in the array  float TotalCost(const Inventory[], int);  const int SIZE = 4; int main() {           //Declare an array of type Inventory, size 4, called myInventory     Inventory myInventory[SIZE];          //Declare an instance of Inventory called newItem          //Declare a float called total              //call a function to read in the data from file               //call a function to display the data that was read in               //call a function to prompt the user for a new item and store      //in newItem      //call a function to add newItem to the file          //call a function to store the total cost of the items in the array               //display total            return 0;  }   //function definitions  void ReadInData(Inventory tempArr[], int SIZE) {     //declare a file pointer     ifstream infile;      //open file for input     infile.open ("inventory.txt" ios::in);      //for loop to read in data     for(int i = 0; i < SIZE; i++)     {         cout<<fixed<<showpoint<<setprecision(2);         infile>>tempArr[i].number>>"\t\t">>tempArr[i].name>>"\t\t">>tempArr[i].count>>"\t\t$";         infile>>tempArr[i].price>>"\t\t"     }  }  void CreateReport(const Inventory[], int); Inventory GetItem(); void AddItemToFile(Inventory); float TotalCost(const Inventory[], int);  Inventory () {         //declare a variable of type Shirt     Shirt tempShirt;          //prompt for data     cout<<"Enter the shirt sleeve type: ";     cin>>tempShirt.sleeveType;     cout<<"Enter the material: ";     cin>>tempShirt.material;     cout<<"Enter the size of the shirt: ";     cin>>tempShirt.size;     cout<<"Enter the price of the shirt: $";     cin>>tempShirt.price;     cout<<"Enter the color of the shirt: ";     cin>>tempShirt.color;          return tempShirt;       }