//structureArrayWorksheet.cpp //August 1, 2013 //This program demonstrates more on the topic of structs and arrays of structs. #include<iostream> #include<string> #include<iomanip> using namespace std;  //declare a structure called Shirt struct Shirt {     //data members(properties)     string sleeveType, material, color;     int size;     float price;          //constructor-function whose purpose is to initialize numeric data     Shirt()     {         size = 0;         price = 0.0;     }   };  //function prototypes //return type: Shirt //parameters: none //Purpose: This function prompts for all of the properties of a Shirt and returns the whole Shirt Shirt GetShirt();  //return type: void //parameters: 1 array of Shirts, 1 int(size of array) //Purpose: This function displays the entire array of Shirts void DisplayShirts(const Shirt[], int);  //return type: void //parameters: 1 array of Shirts, 1 int(size of array), 2 ints by ref(number of long and short sleeves), 1 float by ref(total cost) //Purpose: This function calculates some totals. void CalculateTotals(Shirt[], int, int&, int&, float&); const int SIZE = 3; int main() {     //delare an array of Shirts size 3 called myShirts     Shirt myShirts[SIZE];      //declare local variables     float totalPrice = 0.0;     int numberLong = 0, numberShort = 0;          //get the information for all of the Shirts in myShirts     for(int i = 0; i < SIZE; i++)     {    //call GetShirt         myShirts[i] = GetShirt();     }          //display all Shirts     DisplayShirts(myShirts, SIZE);      //call CalculateTotals function     CalculateTotals(myShirts, SIZE, numberLong, numberShort, totalPrice);          //display results to verify calculations     cout<<"Number of long sleeve shirts:\t"<<numberLong<<endl;     cout<<"Number of short sleeve shirts:\t"<<numberShort<<endl;     cout<<"Total cost of shirts:\t\t$"<<totalPrice<<endl;   return 0; }  //function definitions Shirt GetShirt() {         //declare a variable of type Shirt     Shirt tempShirt;          //prompt for data     cout<<"Enter the shirt sleeve type: ";     cin>>tempShirt.sleeveType;     cout<<"Enter the material: ";     cin>>tempShirt.material;     cout<<"Enter the size of the shirt: ";     cin>>tempShirt.size;     cout<<"Enter the price of the shirt: $";     cin>>tempShirt.price;     cout<<"Enter the color of the shirt: ";     cin>>tempShirt.color;          return tempShirt;       }  void DisplayShirts(const Shirt tempArr[], int size) {     //display the heading first     cout<<"Sleeve Type\tMaterial\tSize\tCost\tColor\n";     cout<<"----------------------------------------------\n";          //for loop to display array contents     for(int i = 0; i < size; i++)     {    cout<<fixed<<showpoint<<setprecision(2);         cout<<tempArr[i].sleeveType<<"\t\t"<<tempArr[i].material<<"\t\t"<<tempArr[i].size<<"\t$"<<tempArr[i].price<<"\t"<<tempArr[i].color<<endl;          } }  void CalculateTotals(Shirt tempArr[], int size, int &numLong, int &numShort, float &totalCost) {     //initialize totals     numLong = 0;     numShort = 0;     totalCost = 0.0;          //for loop to calculate totals     for(int i = 0; i < size; i++)     {    //add to total         totalCost += tempArr[i].price;         //add to long sleeve counter         if(tempArr[i].sleeveType == "long")             numLong++;         //add to short sleeve counter         if(tempArr[i].sleeveType == "short")             numShort++;          }  }