Project1Alg
Crystal Brusch / ml149
July 11, 2013
This is a program that creates an RPG called "Head of State" where you are the ruler of a country. Your actions determine what kind of ruler you will be. Is it a ruthless dictator, an aloof monarch, a benevolent president? Make your choices wisely, because the well-being of your people, and of your head, depend on it.
 
Declare and initialize variables:
int menuChoice, level1Choice, level2Choice, level3Choice, currentHighScore, total, newHighScore
char userName
    	string name;
    Declare file pointer for input:
ifstream infile
    Declare file pointer for output
   	 ofstream outfile
Intro
Prompt user for name
Display main menu and prompt for menu choice
   do
    {
    	1. See Rules
    	2. Play Game
    	3. Quit
    	Get menuChoice
Create switch structure
switch (menuChoice)
    	case 1: See Rules
    	break
case 2: Play Game
Display level 1 menu and prompt for menu choice and validate
   	 do
  	  {
        		1.
		2.
		3.
        		Prompt for level1Choice
      		if (level1Choice == 1)
			Display comment
        		else if (level1Choice == 2)
			Display comment
else if (level1Choice == 3)
	Display comment
             Else
		Display invalid
Generate random number
       		srand (time(NULL))
        		score = rand () %20 + 1    
    }
while (level1Choice < 1 || level1Choice > 3)
Display level 1 score  
Keep running total of score     
   	 total += score;   
Display menu choices for level 2
	lvl 2 menu re: lvl 1 question 1 answer 1
        	if (level1Choice == 1)
       	do
  	  {
        		1.
		2.
		3.
        		Prompt for level2Choice
	Validate
      		if (level2Choice == 1)
			Display comment
        		else if (level2Choice == 2)
			Display comment
else if (level2Choice == 3)
	Display comment
             Else
		Display invalid
Generate random number
       		srand (time(NULL))
        		score = rand () %20 + 1    
    	}
   	while (level2Choice < 1 || level2Choice > 3); 
Display lvl 2 menu re: lvl 1 question 1 answer 2
        	if (level1Choice == 2)
       	do
  	  {
        		1.
		2.
		3.
        		Prompt for level2Choice
	Validate
      		if (level2Choice == 1)
			Display comment
        		else if (level2Choice == 2)
			Display comment
else if (level2Choice == 3)
	Display comment
             Else
		Display invalid
Generate random number
       		srand (time(NULL))
        		score = rand () %20 + 1    
    	}
   	while (level2Choice < 1 || level2Choice > 3); 
Display lvl 2 menu re: lvl 1 question 1 answer 3
        	if (level1Choice == 2)
       	do
  	  {
        		1.
		2.
		3.
        		Prompt for level2Choice
	Validate
      		if (level2Choice == 1)
			Display comment
        		else if (level2Choice == 2)
			Display comment
else if (level2Choice == 3)
	Display comment
             Else
		Display invalid
Generate random number
       		srand (time(NULL))
        		score = rand () %20 + 1    
    	}
   	while (level2Choice < 1 || level2Choice > 3)
Display level 2 score  
Keep running total of score     
   	total += score  
//Display menu choices for level 3
lvl 3 menu re: lvl 2 question 1 answer 1
if (level1Choice == 1 && level2Choice == 1)
do
  		{
        			1.
			2.
			3.
        			Prompt for level3Choice
		Validate
      			if (level3Choice == 1)
				Display comment
        			else if (level3Choice == 2)
				Display comment
else if (level3Choice == 3)
		Display comment
            		 Else
			Display invalid
Generate random number
       			srand (time(NULL))
        			score = rand () %20 + 1    
    		}
 while (level3Choice < 1 || level3Choice > 3) 
//lvl 3 menu re: lvl 2 question 1 answer 2
   	else if (level1Choice == 1 && level2Choice == 2)
do
  		{
        			1.
			2.
			3.
        			Prompt for level3Choice
		Validate
      			if (level3Choice == 1)
				Display comment
        			else if (level3Choice == 2)
				Display comment
else if (level3Choice == 3)
		Display comment
            		 Else
			Display invalid
Generate random number
       			srand (time(NULL))
        			score = rand () %20 + 1    
    		}
while (level3Choice < 1 || level3Choice > 3)
//lvl 3 menu re: lvl 2 question 1 answer 3
else if (level1Choice == 1 && level2Choice == 3)
do
  		{
        			1.
			2.
			3.
        			Prompt for level3Choice
		Validate
      			if (level3Choice == 1)
				Display comment
        			else if (level3Choice == 2)
				Display comment
else if (level3Choice == 3)
		Display comment
            		 Else
			Display invalid
Generate random number
       			srand (time(NULL))
        			score = rand () %20 + 1    
    		}
while (level3Choice < 1 || level3Choice > 3)
Display lvl 3 menu re: lvl 2 question 2 answer 1
else if (level1Choice == 2 && level2Choice == 1)
do
  		{
        			1.
			2.
			3.
        			Prompt for level3Choice
		Validate
      			if (level3Choice == 1)
				Display comment
        			else if (level3Choice == 2)
				Display comment
else if (level3Choice == 3)
		Display comment
            		 Else
			Display invalid
Generate random number
       			srand (time(NULL))
        			score = rand () %20 + 1    
    		}
while (level3Choice < 1 || level3Choice > 3)
Display lvl 3 menu re: lvl 2 question 2 answer 2
   	else if (level1Choice == 2 && level2Choice == 2)
do
  		{
        			1.
			2.
			3.
        			Prompt for level3Choice
		Validate
      			if (level3Choice == 1)
				Display comment
        			else if (level3Choice == 2)
				Display comment
else if (level3Choice == 3)
		Display comment
            		 Else
			Display invalid
Generate random number
       			srand (time(NULL))
        			score = rand () %20 + 1    
    		}
while (level3Choice < 1 || level3Choice > 3)
Display lvl 3 menu re: lvl 2 question 2 answer 3
else if (level1Choice == 2 && level2Choice == 3)
do
  		{
        			1.
			2.
			3.
        			Prompt for level3Choice
		Validate
      			if (level3Choice == 1)
				Display comment
        			else if (level3Choice == 2)
				Display comment
else if (level3Choice == 3)
		Display comment
            		 Else
			Display invalid
Generate random number
       			srand (time(NULL))
        			score = rand () %20 + 1    
    		}
while (level3Choice < 1 || level3Choice > 3)
Display lvl 3 menu re: lvl 2 question 2 answer 1
else if (level1Choice == 3 && level2Choice == 1)
do
  		{
        			1.
			2.
			3.
        			Prompt for level3Choice
		Validate
      			if (level3Choice == 1)
				Display comment
        			else if (level3Choice == 2)
				Display comment
else if (level3Choice == 3)
		Display comment
            		 Else
			Display invalid
Generate random number
       			srand (time(NULL))
        			score = rand () %20 + 1    
    		}
while (level3Choice < 1 || level3Choice > 3)
Display lvl 3 menu re: lvl 2 question 3 answer 2
else if (level1Choice == 1 && level2Choice == 2)
do
  		{
        			1.
			2.
			3.
        			Prompt for level3Choice
		Validate
      			if (level3Choice == 1)
				Display comment
        			else if (level3Choice == 2)
				Display comment
else if (level3Choice == 3)
		Display comment
            		 Else
			Display invalid
Generate random number
       			srand (time(NULL))
        			score = rand () %20 + 1    
    		}
while (level3Choice < 1 || level3Choice > 3)
Display lvl 3 menu re: lvl 2 question 3 answer 3
else if (level1Choice == 3 && level2Choice == 3)
do
  		{
        			1.
			2.
			3.
        			Prompt for level3Choice
		Validate
      			if (level3Choice == 1)
				Display comment
        			else if (level3Choice == 2)
				Display comment
else if (level3Choice == 3)
		Display comment
            		 Else
			Display invalid
Generate random number
       			srand (time(NULL))
        			score = rand () %20 + 1    
    		}
while (level3Choice < 1 || level3Choice > 3)
	Level 2 score  
	if (level3Choice == 2 && level2Choice == 2 && level1Choice == 3)
Display you lose, no score for level 3
Else
	Display level 3 score
Keep running total of score     
   	total += score  
Display total score
Open infile
Read high score from infile
Temporarily display read in information to test code
Close infile
Determine if user's score beats current high score and, if so, write new name and total to file
if(total > currentHighScore)
	Open outfile
	Write username and total to outfile
	Close outfile
	Display that user got the top score
Break

case 3: Quit
        		Display Goodbye
Break

default:
    		Display invalid. Must choose 1-3
}
while (menuChoice != 3);
End program
